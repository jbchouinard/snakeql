
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "AND AS BY COMPARE DISTINCT FALSE FLOAT GROUP ID IN INT NONE NOT O OR POW RETURNING SELECT STR TRUE WHEREstatement : select distinct fexprplus where groupby returning\n    select : SELECT\n           | empty\n    where : WHERE fexprwhere : emptydistinct : DISTINCTdistinct : emptygroupby : GROUP BY fexprplusgroupby : emptyreturning : RETURNING IDreturning : emptyfexprplus : fexprsfexprplus : fexprfexprstar : fexprsfexprstar : fexprfexprstar : emptyfexprs : fexpr ','fexprs : fexprs2plusfexprs : fexprs2plus ','fexprs2plus : fexprs2plus ',' fexprfexprs2plus : fexpr ',' fexprfexpr : fexpr OR predtermfexpr : predtermpredterm : predterm AND prednfactorpredterm : prednfactorprednfactor : NOT prednfactorprednfactor : predfactorpredfactor : predfactor IN fexprspredfactor : predfactor COMPARE arithexprpredfactor : arithexprarithexpr : arithexpr '+' termarithexpr : arithexpr '-' termarithexpr : termterm : term '*' expntterm : term '/' expntterm : term '%' expntterm : expntexpnt : field POW expntexpnt : fieldfield : literalfield : Ofield : O '.' IDfield : O '[' literal ']'field : ID '(' fexprstar ')'field : '(' fexpr ')'field : field AS IDliteral : STRliteral : FLOATliteral : INTliteral : TRUEliteral : FALSEliteral : NONEempty : "
    
_lr_action_items = {'SELECT':([0,],[3,]),'DISTINCT':([0,2,3,4,],[-53,6,-2,-3,]),'NOT':([0,2,3,4,5,6,7,14,23,31,33,34,35,36,38,49,79,],[-53,-53,-2,-3,14,-6,-7,14,14,14,14,14,14,14,14,14,14,]),'O':([0,2,3,4,5,6,7,14,23,31,33,34,35,36,38,39,40,41,42,43,44,45,49,79,],[-53,-53,-2,-3,21,-6,-7,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'ID':([0,2,3,4,5,6,7,14,23,31,33,34,35,36,38,39,40,41,42,43,44,45,46,47,49,77,79,],[-53,-53,-2,-3,22,-6,-7,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,68,69,22,82,22,]),'(':([0,2,3,4,5,6,7,14,22,23,31,33,34,35,36,38,39,40,41,42,43,44,45,49,79,],[-53,-53,-2,-3,23,-6,-7,23,49,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'STR':([0,2,3,4,5,6,7,14,23,31,33,34,35,36,38,39,40,41,42,43,44,45,48,49,79,],[-53,-53,-2,-3,24,-6,-7,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'FLOAT':([0,2,3,4,5,6,7,14,23,31,33,34,35,36,38,39,40,41,42,43,44,45,48,49,79,],[-53,-53,-2,-3,25,-6,-7,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'INT':([0,2,3,4,5,6,7,14,23,31,33,34,35,36,38,39,40,41,42,43,44,45,48,49,79,],[-53,-53,-2,-3,26,-6,-7,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'TRUE':([0,2,3,4,5,6,7,14,23,31,33,34,35,36,38,39,40,41,42,43,44,45,48,49,79,],[-53,-53,-2,-3,27,-6,-7,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'FALSE':([0,2,3,4,5,6,7,14,23,31,33,34,35,36,38,39,40,41,42,43,44,45,48,49,79,],[-53,-53,-2,-3,28,-6,-7,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'NONE':([0,2,3,4,5,6,7,14,23,31,33,34,35,36,38,39,40,41,42,43,44,45,48,49,79,],[-53,-53,-2,-3,29,-6,-7,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'$end':([1,8,9,10,11,12,13,15,16,17,18,19,20,21,24,25,26,27,28,29,30,32,33,35,37,51,53,54,55,56,57,58,59,61,62,63,64,65,66,67,68,69,75,76,78,80,81,82,83,],[0,-53,-12,-13,-18,-23,-25,-27,-30,-33,-37,-39,-40,-41,-47,-48,-49,-50,-51,-52,-53,-5,-17,-19,-26,-53,-9,-4,-21,-22,-20,-24,-28,-29,-31,-32,-34,-35,-36,-38,-46,-42,-45,-1,-11,-43,-44,-10,-8,]),'WHERE':([8,9,10,11,12,13,15,16,17,18,19,20,21,24,25,26,27,28,29,33,35,37,55,56,57,58,59,61,62,63,64,65,66,67,68,69,75,80,81,],[31,-12,-13,-18,-23,-25,-27,-30,-33,-37,-39,-40,-41,-47,-48,-49,-50,-51,-52,-17,-19,-26,-21,-22,-20,-24,-28,-29,-31,-32,-34,-35,-36,-38,-46,-42,-45,-43,-44,]),'GROUP':([8,9,10,11,12,13,15,16,17,18,19,20,21,24,25,26,27,28,29,30,32,33,35,37,54,55,56,57,58,59,61,62,63,64,65,66,67,68,69,75,80,81,],[-53,-12,-13,-18,-23,-25,-27,-30,-33,-37,-39,-40,-41,-47,-48,-49,-50,-51,-52,52,-5,-17,-19,-26,-4,-21,-22,-20,-24,-28,-29,-31,-32,-34,-35,-36,-38,-46,-42,-45,-43,-44,]),'RETURNING':([8,9,10,11,12,13,15,16,17,18,19,20,21,24,25,26,27,28,29,30,32,33,35,37,51,53,54,55,56,57,58,59,61,62,63,64,65,66,67,68,69,75,80,81,83,],[-53,-12,-13,-18,-23,-25,-27,-30,-33,-37,-39,-40,-41,-47,-48,-49,-50,-51,-52,-53,-5,-17,-19,-26,77,-9,-4,-21,-22,-20,-24,-28,-29,-31,-32,-34,-35,-36,-38,-46,-42,-45,-43,-44,-8,]),',':([10,11,12,13,15,16,17,18,19,20,21,24,25,26,27,28,29,33,35,37,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,73,75,80,81,],[33,35,-23,-25,-27,-30,-33,-37,-39,-40,-41,-47,-48,-49,-50,-51,-52,-17,-19,-26,-21,-22,-20,-24,-28,33,-29,-31,-32,-34,-35,-36,-38,-46,-42,33,-45,-43,-44,]),'OR':([10,11,12,13,15,16,17,18,19,20,21,24,25,26,27,28,29,33,35,37,50,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,73,75,80,81,],[34,-18,-23,-25,-27,-30,-33,-37,-39,-40,-41,-47,-48,-49,-50,-51,-52,-17,-19,-26,34,34,34,-22,34,-24,-28,34,-29,-31,-32,-34,-35,-36,-38,-46,-42,34,-45,-43,-44,]),'AND':([11,12,13,15,16,17,18,19,20,21,24,25,26,27,28,29,33,35,37,55,56,57,58,59,61,62,63,64,65,66,67,68,69,75,80,81,],[-18,36,-25,-27,-30,-33,-37,-39,-40,-41,-47,-48,-49,-50,-51,-52,-17,-19,-26,-21,36,-20,-24,-28,-29,-31,-32,-34,-35,-36,-38,-46,-42,-45,-43,-44,]),')':([11,12,13,15,16,17,18,19,20,21,24,25,26,27,28,29,33,35,37,49,50,55,56,57,58,59,61,62,63,64,65,66,67,68,69,71,72,73,74,75,80,81,],[-18,-23,-25,-27,-30,-33,-37,-39,-40,-41,-47,-48,-49,-50,-51,-52,-17,-19,-26,-53,75,-21,-22,-20,-24,-28,-29,-31,-32,-34,-35,-36,-38,-46,-42,81,-14,-15,-16,-45,-43,-44,]),'IN':([11,12,13,15,16,17,18,19,20,21,24,25,26,27,28,29,33,35,37,55,56,57,58,59,61,62,63,64,65,66,67,68,69,75,80,81,],[-18,-23,-25,38,-30,-33,-37,-39,-40,-41,-47,-48,-49,-50,-51,-52,-17,-19,-26,-21,-22,-20,-24,-28,-29,-31,-32,-34,-35,-36,-38,-46,-42,-45,-43,-44,]),'COMPARE':([11,12,13,15,16,17,18,19,20,21,24,25,26,27,28,29,33,35,37,55,56,57,58,59,61,62,63,64,65,66,67,68,69,75,80,81,],[-18,-23,-25,39,-30,-33,-37,-39,-40,-41,-47,-48,-49,-50,-51,-52,-17,-19,-26,-21,-22,-20,-24,-28,-29,-31,-32,-34,-35,-36,-38,-46,-42,-45,-43,-44,]),'+':([16,17,18,19,20,21,24,25,26,27,28,29,61,62,63,64,65,66,67,68,69,75,80,81,],[40,-33,-37,-39,-40,-41,-47,-48,-49,-50,-51,-52,40,-31,-32,-34,-35,-36,-38,-46,-42,-45,-43,-44,]),'-':([16,17,18,19,20,21,24,25,26,27,28,29,61,62,63,64,65,66,67,68,69,75,80,81,],[41,-33,-37,-39,-40,-41,-47,-48,-49,-50,-51,-52,41,-31,-32,-34,-35,-36,-38,-46,-42,-45,-43,-44,]),'*':([17,18,19,20,21,24,25,26,27,28,29,62,63,64,65,66,67,68,69,75,80,81,],[42,-37,-39,-40,-41,-47,-48,-49,-50,-51,-52,42,42,-34,-35,-36,-38,-46,-42,-45,-43,-44,]),'/':([17,18,19,20,21,24,25,26,27,28,29,62,63,64,65,66,67,68,69,75,80,81,],[43,-37,-39,-40,-41,-47,-48,-49,-50,-51,-52,43,43,-34,-35,-36,-38,-46,-42,-45,-43,-44,]),'%':([17,18,19,20,21,24,25,26,27,28,29,62,63,64,65,66,67,68,69,75,80,81,],[44,-37,-39,-40,-41,-47,-48,-49,-50,-51,-52,44,44,-34,-35,-36,-38,-46,-42,-45,-43,-44,]),'POW':([19,20,21,24,25,26,27,28,29,68,69,75,80,81,],[45,-40,-41,-47,-48,-49,-50,-51,-52,-46,-42,-45,-43,-44,]),'AS':([19,20,21,24,25,26,27,28,29,68,69,75,80,81,],[46,-40,-41,-47,-48,-49,-50,-51,-52,-46,-42,-45,-43,-44,]),'.':([21,],[47,]),'[':([21,],[48,]),']':([24,25,26,27,28,29,70,],[-47,-48,-49,-50,-51,-52,80,]),'BY':([52,],[79,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statement':([0,],[1,]),'select':([0,],[2,]),'empty':([0,2,8,30,49,51,],[4,7,32,53,74,78,]),'distinct':([2,],[5,]),'fexprplus':([5,79,],[8,83,]),'fexprs':([5,38,49,79,],[9,59,72,9,]),'fexpr':([5,23,31,33,35,38,49,79,],[10,50,54,55,57,60,73,10,]),'fexprs2plus':([5,38,49,79,],[11,11,11,11,]),'predterm':([5,23,31,33,34,35,38,49,79,],[12,12,12,12,56,12,12,12,12,]),'prednfactor':([5,14,23,31,33,34,35,36,38,49,79,],[13,37,13,13,13,13,13,58,13,13,13,]),'predfactor':([5,14,23,31,33,34,35,36,38,49,79,],[15,15,15,15,15,15,15,15,15,15,15,]),'arithexpr':([5,14,23,31,33,34,35,36,38,39,49,79,],[16,16,16,16,16,16,16,16,16,61,16,16,]),'term':([5,14,23,31,33,34,35,36,38,39,40,41,49,79,],[17,17,17,17,17,17,17,17,17,17,62,63,17,17,]),'expnt':([5,14,23,31,33,34,35,36,38,39,40,41,42,43,44,45,49,79,],[18,18,18,18,18,18,18,18,18,18,18,18,64,65,66,67,18,18,]),'field':([5,14,23,31,33,34,35,36,38,39,40,41,42,43,44,45,49,79,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'literal':([5,14,23,31,33,34,35,36,38,39,40,41,42,43,44,45,48,49,79,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,70,20,20,]),'where':([8,],[30,]),'groupby':([30,],[51,]),'fexprstar':([49,],[71,]),'returning':([51,],[76,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement","S'",1,None,None,None),
  ('statement -> select distinct fexprplus where groupby returning','statement',6,'p_statement','parser.py',56),
  ('select -> SELECT','select',1,'p_select','parser.py',72),
  ('select -> empty','select',1,'p_select','parser.py',73),
  ('where -> WHERE fexpr','where',2,'p_where_1','parser.py',79),
  ('where -> empty','where',1,'p_where_2','parser.py',84),
  ('distinct -> DISTINCT','distinct',1,'p_distinct_1','parser.py',89),
  ('distinct -> empty','distinct',1,'p_distinct_2','parser.py',94),
  ('groupby -> GROUP BY fexprplus','groupby',3,'p_groupby_1','parser.py',99),
  ('groupby -> empty','groupby',1,'p_groupby_2','parser.py',106),
  ('returning -> RETURNING ID','returning',2,'p_returning_1','parser.py',111),
  ('returning -> empty','returning',1,'p_returning_2','parser.py',119),
  ('fexprplus -> fexprs','fexprplus',1,'p_fexprplus_1','parser.py',124),
  ('fexprplus -> fexpr','fexprplus',1,'p_fexprplus_2','parser.py',129),
  ('fexprstar -> fexprs','fexprstar',1,'p_fexprstar_1','parser.py',134),
  ('fexprstar -> fexpr','fexprstar',1,'p_fexprstar_2','parser.py',139),
  ('fexprstar -> empty','fexprstar',1,'p_fexprstar_3','parser.py',144),
  ('fexprs -> fexpr ,','fexprs',2,'p_fexprs_1','parser.py',149),
  ('fexprs -> fexprs2plus','fexprs',1,'p_fexprs_2','parser.py',154),
  ('fexprs -> fexprs2plus ,','fexprs',2,'p_fexprs_3','parser.py',159),
  ('fexprs2plus -> fexprs2plus , fexpr','fexprs2plus',3,'p_fexprs2plus_1','parser.py',164),
  ('fexprs2plus -> fexpr , fexpr','fexprs2plus',3,'p_fexprs2plus_2','parser.py',170),
  ('fexpr -> fexpr OR predterm','fexpr',3,'p_fexpr_1','parser.py',175),
  ('fexpr -> predterm','fexpr',1,'p_fexpr_2','parser.py',180),
  ('predterm -> predterm AND prednfactor','predterm',3,'p_predterm_1','parser.py',185),
  ('predterm -> prednfactor','predterm',1,'p_predterm_2','parser.py',190),
  ('prednfactor -> NOT prednfactor','prednfactor',2,'p_prednfactor_1','parser.py',195),
  ('prednfactor -> predfactor','prednfactor',1,'p_prednfactor_2','parser.py',200),
  ('predfactor -> predfactor IN fexprs','predfactor',3,'p_predfactor_1','parser.py',205),
  ('predfactor -> predfactor COMPARE arithexpr','predfactor',3,'p_predfactor_2','parser.py',210),
  ('predfactor -> arithexpr','predfactor',1,'p_predfactor_3','parser.py',235),
  ('arithexpr -> arithexpr + term','arithexpr',3,'p_arithexpr_1','parser.py',240),
  ('arithexpr -> arithexpr - term','arithexpr',3,'p_arithexpr_2','parser.py',245),
  ('arithexpr -> term','arithexpr',1,'p_arithexpr_3','parser.py',250),
  ('term -> term * expnt','term',3,'p_term_1','parser.py',255),
  ('term -> term / expnt','term',3,'p_term_2','parser.py',260),
  ('term -> term % expnt','term',3,'p_term_3','parser.py',265),
  ('term -> expnt','term',1,'p_term_4','parser.py',270),
  ('expnt -> field POW expnt','expnt',3,'p_expnt_1','parser.py',275),
  ('expnt -> field','expnt',1,'p_expnt_2','parser.py',280),
  ('field -> literal','field',1,'p_field_1','parser.py',285),
  ('field -> O','field',1,'p_field_2','parser.py',290),
  ('field -> O . ID','field',3,'p_field_3','parser.py',295),
  ('field -> O [ literal ]','field',4,'p_field_4','parser.py',300),
  ('field -> ID ( fexprstar )','field',4,'p_field_5','parser.py',305),
  ('field -> ( fexpr )','field',3,'p_field_6','parser.py',313),
  ('field -> field AS ID','field',3,'p_field_7','parser.py',318),
  ('literal -> STR','literal',1,'p_literal_1','parser.py',323),
  ('literal -> FLOAT','literal',1,'p_literal_2','parser.py',328),
  ('literal -> INT','literal',1,'p_literal_3','parser.py',333),
  ('literal -> TRUE','literal',1,'p_literal_4','parser.py',338),
  ('literal -> FALSE','literal',1,'p_literal_5','parser.py',343),
  ('literal -> NONE','literal',1,'p_literal_6','parser.py',348),
  ('empty -> <empty>','empty',0,'p_empty_1','parser.py',353),
]
